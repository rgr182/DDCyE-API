trigger:
  branches:
    include:
      - main

pool:
  name: 'Self-Hosted Pool'  # Name of the pool for the self-hosted agent

steps:
# Install .NET Core SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Restore dependencies for the DDEyC_API project only
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(Build.SourcesDirectory)/DDEyC_API/DDEyC_API.csproj'

# Build the DDEyC_API project only
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/DDEyC_API/DDEyC_API.csproj'
    arguments: '--configuration Release'

# Publish the DDEyC_API project to a temporary directory for deployment
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '$(Build.SourcesDirectory)/DDEyC_API/DDEyC_API.csproj'
    publishWebProjects: true
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

# Copy the published files to the remote server using SSH
- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'SSH Devops'  # Your SSH service connection name in Azure DevOps
    sourceFolder: '$(Build.ArtifactStagingDirectory)'
    targetFolder: 'C:/inetpub/WebAPI'
    cleanTargetFolder: false

# Execute SSH commands on the remote server to restart IIS
- task: SSH@0
  inputs:
    sshEndpoint: 'SSH Devops'  # Your SSH service connection name in Azure DevOps
    runOptions: 'inline'
    inline: |
      iisreset  # Command to restart IIS on the Windows server
    failOnStdErr: true