trigger:
  branches:
    include:
      - main

pool:
  name: 'Self-Hosted Pool'

variables:
- group: DeploymentCredentials  # Links to the variable group you created

steps:
# Install .NET Core SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Restore dependencies for the DDEyC_API project only
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(Build.SourcesDirectory)/DDEyC_API/DDEyC_API.csproj'

# Build the DDEyC_API project only
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/DDEyC_API/DDEyC_API.csproj'
    arguments: '--configuration Release'

# Publish the DDEyC_API project to a temporary directory for deployment
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '$(Build.SourcesDirectory)/DDEyC_API/DDEyC_API.csproj'
    publishWebProjects: true
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'SSH Devops'
    sourceFolder: '$(Build.ArtifactStagingDirectory)'
    targetFolder: 'C:/inetpub/WebAPI'
    cleanTargetFolder: false

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Attempting to restart IIS..."
      try {
        $result = iisreset
        if ($LASTEXITCODE -ne 0) {
          throw "IISReset failed with exit code $LASTEXITCODE. Output: $result"
        }
        Write-Host $result
        Write-Host "IIS restarted successfully."
      }
      catch {
        Write-Error "An error occurred while restarting IIS: $_"
        throw
      }