pool:
  name: 'Self-Hosted Pool'  # Name of the pool for the self-hosted agent

steps:
# Install .NET Core SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Restore dependencies for the DDEyC_API project only
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(Build.SourcesDirectory)/DDEyC_API/DDEyC_API.csproj'

# Build the DDEyC_API project only
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/DDEyC_API/DDEyC_API.csproj'
    arguments: '--configuration Release'

# Publish the DDEyC_API project to a temporary directory for deployment
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '$(Build.SourcesDirectory)/DDEyC_API/DDEyC_API.csproj'
    publishWebProjects: true
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

# Use PowerShell to copy files to the remote Windows server via SMB (if the folder is shared)
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $SourceFolder = "$(Build.ArtifactStagingDirectory)"
      $TargetFolder = "\\your-server-name\C$\inetpub\WebAPI"  # Ruta UNC para copiar a una carpeta compartida en el servidor
      Copy-Item -Path $SourceFolder\* -Destination $TargetFolder -Recurse -Force

# Execute a PowerShell command to restart IIS on the remote Windows server
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Invoke-Command -ComputerName your-server-name -ScriptBlock {iisreset}
